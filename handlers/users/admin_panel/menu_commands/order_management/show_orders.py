from sqlalchemy import select
from utils.db_api.models import engine, Storage, Order_products, Orders


async def show_orders_func(message):
    conn = engine.connect()

    '''
    –ò—â–µ–º order_id, platform, full_price, date –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–∫–∞–∑–∞ —Å–¥–µ–ª–∞–Ω–æ–≥–æ –∞–¥–º–∏–Ω–æ–º
    '''
    info_orders = select([
        Orders.c.id,
        Orders.c.platform,
        Orders.c.price,
        Orders.c.date,
        Orders.c.ttn,
    ]).where(Orders.c.status == "processing")
    info_orders = conn.execute(info_orders)
    info_orders = info_orders.fetchall()

    if not info_orders:
        await message.answer("–ó–∞–∫–∞–∑–æ–≤ –Ω–µ—Çüò≠")
    else:
        for order in info_orders:

            order_id = order[0]
            platform = order[1]
            full_price = order[2]
            date = order[3]
            ttn = order[4]

            '''
            –û–±—ä–µ–¥–∏–Ω—è–µ–º —Ç–∞–±–ª—Ü—ã Order_products –∏ Storage –ø–æ –Ω–æ–º–µ—Ä—É –∑–∞–∫–∞–∑–∞
            '''

            joins = select([
                Order_products.c.quantity,
                Storage.c.price,
                Storage.c.title,
            ]).select_from(
                Order_products.join(Storage)
            ).where(Order_products.c.order_id == order_id)
            rs = conn.execute(joins)  # [(50, 12, '–õ—É—á—à—ñ')]

            list_products = rs.fetchall()

            '''
            –í—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–∫–∞–∑–µ –∞–¥–º–∏–Ω—É
            '''

            result = f"{date}\n" \
                     f"–ó–∞–∫–∞–∑ ‚Ññ{order_id} ({platform})\n" \
                     f"–¢–¢–ù {ttn}\n"

            for into in list_products:
                quantity = into[0]
                price = into[1]
                title = into[2]

                result += f"{title} - {quantity}—à—Ç ({price}–≥—Ä–Ω)\n"

            result += f"= {full_price} –≥—Ä–Ω"

            await message.answer(result)
        conn.close()
